@model HaberPortal.Haber

@{
    ViewBag.Title = "Haber Düzenle";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

@section scripts{
    <script type="text/javascript" src="~/ckeditor/ckeditor.js"></script>
    <script>CKEDITOR.replace("Icerik");</script>
    <script>Icerik = CKEDITOR.instances.Icerik.getData();</script>

}

@using (Html.BeginForm("HaberDüzenle", "Yonetim", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Haber Düzenle</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Baslik, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-12">
            @Html.EditorFor(model => model.Baslik, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Baslik, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Ozet, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-12">
            @Html.EditorFor(model => model.Ozet, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Ozet, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Icerik, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-12">
            @Html.TextAreaFor(model => model.Icerik, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Icerik, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.KategoriID, "Kategori", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-12">
            @Html.DropDownList("KategoriID", ViewBag.KategoriID as SelectList, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.KategoriID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TipID, "Tip", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-12">
            @Html.DropDownList("TipID", ViewBag.TipID as SelectList, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TipID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Resim, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-12">
            <img class="card-img" src="data:image;base64,@Convert.ToBase64String(Model.Resim)" style="object-fit:cover;width:200px"><br /><br />
            @Html.TextBoxFor(model => model.Resim, new { Type = "File", Name = "UploadedPhoto", @id = "UploadedPhoto" , @accept = "image/*" })
            @Html.ValidationMessageFor(model => model.Resim, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-12">
            <input type="submit" value="Güncelle" class="btn btn-warning form-control" />
        </div>
    </div>
    <div class="col-md-12">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    </div>
</div>
}

